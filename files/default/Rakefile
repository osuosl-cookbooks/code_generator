# Rake tasks

require 'rake'

require 'fileutils'
require 'base64'
require 'chef/encrypted_data_bag_item'
require 'json'
require 'openssl'

snakeoil_file_path = 'test/integration/data_bags/certificates/snakeoil.json'
secret_file_path = 'test/integration/encrypted_data_bag_secret'

##
# Create a data bag item (with the id of snakeoil) containing a self-signed SSL
#  certificate 
#
# TODO: Change X509 Name
def new_ssl_cert
  name = OpenSSL::X509::Name.parse 'CN=nobody/DC=example'
  key = OpenSSL::PKey::RSA.new 2048

  cert = OpenSSL::X509::Certificate.new
  cert.version = 2
  cert.serial = 2
  cert.subject = name
  cert.public_key = key.public_key
  cert.not_before = Time.now
  cert.not_after = cert.not_before + 1 * 365 * 24 * 60 * 60 # 1 years validity

  # Self-sign the Certificate
  cert.issuer = name
  cert.sign(key, OpenSSL::Digest::SHA1.new)

  # Output Certificate & Key
  return Chef::DataBagItem.from_hash({
    'id' => 'snakeoil',
    'cert' => cert.to_pem,
    'key' => key.to_pem
  })
end

##
# Create the integration tests directory if it doesn't exist
#
directory 'test/integration'

##
# Generates a 512 byte random sequence and write it to
#  'test/integration/encrypted_data_bag_secret'
#
file secret_file_path => 'test/integration' do
  encrypted_data_bag_secret = OpenSSL::Random.random_bytes(512)
  open secret_file_path, 'w' do |io|
    io.write Base64.encode64(encrypted_data_bag_secret)
  end
end

##
# Create the certificates data bag if it doesn't exist
#
directory 'test/integration/data_bags/certificates' => 'test/integration'

##
# Create the encrypted snakeoil certificate under
#  test/integration/data_bags/certificates
#
file snakeoil_file_path => [ 
  'test/integration/data_bags/certificates',
  'test/integration/encrypted_data_bag_secret'
  ] do

  ssl_hash = new_ssl_cert()

  secret_file = Chef::EncryptedDataBagItem.load_secret(secret_file_path)
  encrypted_snakeoil = Chef::EncryptedDataBagItem.encrypt_data_bag_item(ssl_hash, secret_file)

  open snakeoil_file_path, 'w' do |io|
      io.write JSON.pretty_generate(encrypted_snakeoil)
  end
end


desc 'Create an Encrypted Databag Snakeoil SSL Certificate'
task :snakeoil => snakeoil_file_path

desc 'Create an Encrypted Databag Secret'
task :secret_file => secret_file_path

task :default => :snakeoil
